"""
Django settings for fortune_project project.

Generated by 'django-admin startproject' using Django 3.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
# for use with the django-debug-toolbar
# import socket
import dj_database_url
import django_heroku
import os
import dotenv
import mimetypes
from corsheaders.defaults import default_headers


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ENVIRONMENT = os.environ.get('ENVIRONMENT', default='production')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DJANGO_DEBUG", default=False)

ALLOWED_HOSTS = [
    'fortune-docker.herokuapp.com',
    'fortunegiver.herokuapp.com',
    'underwaterfortunes.com',
    'underwaterfortunes.herokuapp.com',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    # 3rd party
    'rest_framework',
    'rest_framework_api_key',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',
    'manifest_loader',  # should allow webpack to use splitchunks
    # local apps
    'users.apps.UsersConfig',
    'fortunes.apps.FortunesConfig',
    'contactus.apps.ContactusConfig',
    'frontend.apps.FrontendConfig',
]

# I moved white noise up, removed runserver_nostatic, made it only say templates
# and then the mime type stopped being an issue.

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fortune_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fortune_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DATABASE_URL_NAME'),
        'USER': os.environ.get('DATABASE_URL_USER'),
        'PASSWORD': os.environ.get('DATABASE_URL_PASSWORD'),
        'HOST': os.environ.get('DATABASE_URL_HOST'),
        'PORT': 5432
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True

AUTH_USER_MODEL = 'users.CustomUser'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
}


CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'X-Api-Key',
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with'
]

API_KEY_CUSTOM_HEADER = "HTTP_X_API_KEY"

# CORS_ALLOW_CREDENTIALS = False

# CORS_ALLOW_ALL_ORIGINS = False

# CORS_ORIGIN_ALLOW_WHITELIST = (
#     'https://fortunegiver.herokuapp.com',
#     'https://fortune-docker.herokuapp.com',
#     'https://underwaterfortunes.com',
#     'http://localhost:3000',
#     'http://localhost:8080',
# )

# This is used now instead of whitelist
CORS_ALLOWED_ORIGINS = [
    'https://fortunegiver.herokuapp.com',
    'https://fortune-docker.herokuapp.com',
    'https://underwaterfortunes.herokuapp.com',
    'https://underwaterfortunes.com',
]

# The following is for development not production.
if ENVIRONMENT == 'development':
    CORS_ORIGIN_ALLOW_ALL = True
    mimetypes.add_type("application/javascript", ".js", True)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'frontend/static'),
)

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

WHITENOISE_ALLOW_ALL_ORIGINS = True
WHITENOISE_MANIFEST_STRICT = False

# Optional Settings
MANIFEST_LOADER = {
    'output_dir': 'frontend/static',
    'manifest_file': 'manifest.json',  # name of your manifest file
    'cache': True,
}

if ENVIRONMENT == 'production':
    SECURE_BROWSER_XSS_FILTER = True
    X_FRAME_OPTIONS = 'SAMEORIGIN'  # No longer the default setting. Deny is the default
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 10000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SESSION_COOKIE_SAMESITE = None
    CSRF_COOKIE_SECURE = True
    CORS_REPLACE_HTTPS_REFERER = True
    # SECURE_REFERRER_POLICY = 'same-origin'
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Heroku
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)
django_heroku.settings(locals())
